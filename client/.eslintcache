[{"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\index.js":"1","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\App.js":"2","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\SavedList.js":"3","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\MovieList.js":"4","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\Movie.js":"5","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\UpdateForm.js":"6","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\MovieCard.js":"7","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\AddForm.js":"8","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\AddMovie.js":"9"},{"size":316,"mtime":1607236495777,"results":"10","hashOfConfig":"11"},{"size":1477,"mtime":1607285466039,"results":"12","hashOfConfig":"11"},{"size":624,"mtime":1607281376923,"results":"13","hashOfConfig":"11"},{"size":421,"mtime":1607225060377,"results":"14","hashOfConfig":"11"},{"size":1695,"mtime":1607241229698,"results":"15","hashOfConfig":"11"},{"size":2662,"mtime":1607321608854,"results":"16","hashOfConfig":"11"},{"size":587,"mtime":1607225060377,"results":"17","hashOfConfig":"11"},{"size":2180,"mtime":1607321167805,"results":"18","hashOfConfig":"11"},{"size":412,"mtime":1607283754537,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ynfkbr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\index.js",[],["42","43"],"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\App.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\SavedList.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\MovieList.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\Movie.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\UpdateForm.js",["44"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams,useHistory} from 'react-router-dom';\r\nimport {Form,Input,Label,Button} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nfunction UpdateForm(props){\r\nconst [movie,setMovie]=useState({\r\n    title:'',\r\n    id:'',\r\n    director:'',\r\n    metascore:'',\r\n    stars:''\r\n})\r\nconst[updatedMovie,setUpdatedMovie]=useState({})\r\n\r\nconst params=useParams();\r\nconst history=useHistory();\r\n\r\nuseEffect(() => {\r\n    fetchMovie(params.id);\r\n  }, [params.id]);\r\n\r\nconst fetchMovie = (id) => {\r\n    axios\r\n      .get(`http://localhost:5000/api/movies/${id}`)\r\n      .then((res) => {\r\n          console.log('get res in update=',res.data)\r\n          setMovie(res.data)})\r\n      .catch((err) => console.log(err.response));\r\n  };\r\n\r\nconst handleChange=(e)=>{\r\n    setMovie({\r\n    ...movie,\r\n    [e.target.name]:e.target.value\r\n    })\r\n}\r\n\r\nconst handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    const newArray={\r\n        ...movie,\r\n        stars:movie.stars.split(',')\r\n    }\r\n    axios.put(`http://localhost:5000/api/movies/${params.id}`,newArray)\r\n    .then(res=>{\r\n        console.log('put res=',res)\r\n        setUpdatedMovie(res.data)\r\n        const updatedList = props.movies.map(item=>{\r\n             if (item.id === Number(params.id)){\r\n                console.log('im here')\r\n                return (res.data)\r\n            }else return item;\r\n        })\r\n        console.log('updatedList=',updatedList);\r\n        props.setMovieList(updatedList);\r\n        history.push(`/movies/${params.id}`)\r\n    })\r\n    .catch(err=> console.log('err in put=',err.response))\r\n}\r\n\r\nreturn(\r\n    <>\r\n    <h4>Update Movie</h4>\r\n    <div className=\"updateForm\">\r\n        <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"title\">Movie Title\r\n        <Input \r\n         id=\"title\"\r\n         name=\"title\"\r\n         value={movie.title}\r\n         onChange={handleChange}\r\n        /></Label>\r\n         <Label htmlFor=\"director\">Director\r\n        <Input\r\n         id=\"director\"\r\n         name=\"director\"\r\n         value={movie.director}\r\n         onChange={handleChange}\r\n        /></Label>\r\n        <Label htmlFor=\"metascore\">Meta Score\r\n        <Input\r\n         id=\"metascore\"\r\n         name=\"metascore\"\r\n         type=\"number\"\r\n         onChange={handleChange}\r\n         value={movie.metascore}\r\n        /></Label>\r\n        <Label htmlFor=\"stars\">Stars\r\n        <Input\r\n         id=\"stars\"\r\n         name=\"stars\"\r\n         onChange={handleChange}\r\n         value={movie.stars}\r\n        /></Label>\r\n        <br/>\r\n        <Button type=\"info\">Update</Button>\r\n        </Form>\r\n    </div>\r\n    </>\r\n)\r\n}\r\nexport default UpdateForm;","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\MovieCard.js",[],["45","46"],"C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\AddForm.js",["47","48"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams,useHistory} from 'react-router-dom';\r\nimport {Form,Input,Label,Button} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nfunction AddForm(props){\r\nconst [movie,setMovie]=useState({\r\n    id:\"\",\r\n    title:'',\r\n    director:'',\r\n    metascore:'',\r\n    stars:\"\",\r\n})\r\n \r\n\r\nconst params=useParams();\r\nconst history=useHistory();\r\n\r\n const handleChange=(e)=>{\r\n    setMovie({\r\n    ...movie,\r\n    [e.target.name]:e.target.value,\r\n    })\r\n    console.log('in change=',movie.stars)\r\n\r\n}\r\n\r\nconst handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    const newMovie={\r\n        ...movie,\r\n        stars:movie.stars.split(\",\")\r\n    }\r\n    postMovie(newMovie);\r\n}\r\n\r\n\r\nconst postMovie=(newMovie)=>{\r\n    console.log('in post=',newMovie);\r\naxios.post('http://localhost:5000/api/movies',newMovie)\r\n.then(res=>{\r\n    console.log('post friends',res)\r\n    const newList=res.data;\r\n    //update the movieList\r\n    props.setMovieList(newList);\r\n    //userexperience to route to prev page\r\n    history.push('/')\r\n})\r\n.catch(err=> console.log('err in post',err))\r\n}\r\n\r\nreturn(\r\n    <>\r\n    <h4>Add Movie</h4>\r\n    <div className=\"addForm\">\r\n        <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"title\">Movie Title\r\n        <Input \r\n         id=\"title\"\r\n         name=\"title\"\r\n         value={movie.title}\r\n         onChange={handleChange}\r\n        /></Label>\r\n         <Label htmlFor=\"director\">Director\r\n        <Input\r\n         id=\"director\"\r\n         name=\"director\"\r\n         value={movie.director}\r\n         onChange={handleChange}\r\n        /></Label>\r\n        <Label htmlFor=\"metascore\">Meta Score\r\n        <Input\r\n         id=\"metascore\"\r\n         name=\"metascore\"\r\n         type=\"number\"\r\n         onChange={handleChange}\r\n         value={movie.metascore}\r\n        /></Label>\r\n         \r\n        <Label htmlFor=\"stars\">Stars\r\n        <Input\r\n         id=\"stars\"\r\n         name=\"stars\"\r\n         type=\"text\"\r\n         onChange={handleChange}\r\n         value={movie.stars}\r\n        /></Label>\r\n        <br/>\r\n        <Button color=\"primary\">Add</Button>\r\n        </Form>\r\n    </div>\r\n    </>\r\n)\r\n}\r\nexport default AddForm;","C:\\Users\\vasan\\Documents\\mygithub\\HTTP-Movies-Assignment\\client\\src\\Movies\\AddMovie.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":14,"column":7,"nodeType":"55","messageId":"56","endLine":14,"endColumn":19},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","replacedBy":"58"},{"ruleId":"53","severity":1,"message":"59","line":1,"column":24,"nodeType":"55","messageId":"56","endLine":1,"endColumn":33},{"ruleId":"53","severity":1,"message":"60","line":16,"column":7,"nodeType":"55","messageId":"56","endLine":16,"endColumn":13},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'updatedMovie' is assigned a value but never used.","Identifier","unusedVar",["61"],["62"],"'useEffect' is defined but never used.","'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]